# -*- coding: utf-8 -*-
"""HW4_Part1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pc5AvicBDOVu4ljQ_jPBfvimZIyVM5qp

Homework 4 Questions 1 & 2
"""

["from google.colab import drive\n",
 "drive.mount ('/content/drive')"]

{"mjfEOBb_-teU",{"https://localhost: 8080/"}}

"de718e4c-fece-4267-abae-1d27719c86c9"

null,

[{"stream","stdout",["Mounted at /content/drive\n"]}]

{"code",}
import pandas as pd
import matplotlib.pyplot as plt

"""**Q1** Please use Pandas to read olympic_medals.csv and use parallel_categories function from plotly.express to visualize proportions of medal type for each gender from since year 2000. Please see the example in the Python notebook we walked through in the class."""

#please use this cell to read and select your data
"df = pd.read_csv('/content/drive/MyDrive/DATA/olympic_medals.csv')\n",
"df.head()"

null,

[{"execute_result"}]

"code"

"df = pd. read_csv ('/content /drive/MyDrive/DATA/olympic_medals.csv') \n",
"df_since_2000 = df[df[ 'Year'] >= 2000]. copy () \n",
"df_since_2000.reset_index (drop=True, inplace=True) \n"

"display_data"

#Please use this cell to create your your figure. Please use Year column to color your graph.
"\n",
"#hue = 'year'\n",
"\n",
"import plotly express as px\n",
"px.parallel_categories (df_since_2000[[ 'Year', 'Medal', 'Gender']J, color= 'Year' )"

"""**Q2** Please inspect the code below and observe how values are plotted by running it. Then, read the 2016elections.csv from the DATA folder and select rows for AR, MI, CA, and WI. Then, utilize stacked bar plot, to stack vote percentages for Trump, Clinton, Johnson, and Others. Please see 'pct_clinton',	'pct_trump',	'pct_johnson',	'pct_other' columns. Make sure that your x tick labels are those four states above."""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# create DataFrame
df = pd.DataFrame({'High Temp': [28, 30, 34, 38, 45, 42,
                                 38, 35, 32, 28, 25, 21],
                   'Low Temp': [22, 26, 30, 32, 41, 38,
                                32, 31, 28, 22, 15, 15],
                   'Avg Temp': [25, 28, 32, 35, 43, 40,
                                35, 33, 30, 25, 20, 18]},
                  index=['Jan', 'Feb', 'Mar', 'Apr', 'May',
                         'Jun', 'Jul', 'Aug', 'Sep', 'Oct',
                         'Nov', 'Dec'])


# create stacked bar chart for monthly temperatures
df.plot(kind='bar', stacked=True, color=['red', 'skyblue', 'green'])

# labels for x & y axis
plt.xlabel('Months')
plt.ylabel('Temp ranges in Degree Celsius')

# title of plot
plt.title('Monthly Temperatures in a year')

#You can use this cell to write your code. It is doable at most 4 lines of code.
"df = pd.read_csv('/content/drive/MyDrive/DATA/2016elections.csv')\n",
"df. head ()"

"execute_result"

"code"

["#Select rows for AR, MI, CA, WI\n",
 "selected_states = ['AR', 'MI', 'CA', 'WI']\n",
 "selected_data = df[df['st'].isin(selected_states)]\n",
 "\n",]
 # Create a stacked bar plot\n",
"selected_data[['pet_clinton', 'pot_trump', 'pet_johnson', 'pct_other']].plot(kind='bar',stacked-True, color=['blue', 'red', 'green', 'gray']) \n",
"# Set x tick labels to the selected states\n"
"plt.xticks (range (len (selected _states)), selected_states) \n",
"\n"
"# Labels for × & y axis\n",
"plt.xlabel ('States') \n",
"plt.ylabel( 'Vote Percentages') \n",
"\n",
"# Title of the plot\n",
"pit.title('2016 Elections: Vote Percentages by Candidate and State') \n",
"\n",
"# Show the plot\n",
"plt. show()"

null

"display_data"

["# Create stacked bar chart for vote percentages \n",
 "selected_data[['pot_clinton', 'pet_trump', 'pet_johnson', 'pet_other ]].plot(kind='bar',stacked=True, color=['blue', 'red', 'green', 'gray'])\n",
 "\n",
 "# Set × tick labels to the selected states\n",
 "pIt.xticks (range (len (selected_states)), selected_states) \n",
 "\n",
 "# Labels for × & y axis\n"
 "pIt.xlabel('States') \n",
 "plt.ylabel('Vote Percentages') \n",
 "\n",
 "# Title of the plot\n",
 "pIt. title('2016 Elections: Vote Percentages by Candidate and State') \n",
 "\n",
 "# Show the plot\n"
 "pit.show ()"]

null,

"display_data"